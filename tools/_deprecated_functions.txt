function echoln($texte) // echo + passage à la ligne
{
    echo $texte . "\n";
}

function getparam($name, $default = "", $allow_sql = 0) // initialise proprement une variable avec le contenu d'un paramètre facultatif et filtrage anti injection de code
{
    if (isset($_REQUEST[$name])) {
        $param = $_REQUEST[$name];
        if (!is_utf8($param)) {
            $param = iconv('iso-8859-15', 'UTF-8', $param);
        } // Conversion des paramètres en UTF8
        $paramMaj = strtoupper($param);
        $interdits = array("SELECT", "INSERT", "DELETE", "UPDATE", "DROP", "TRUNCATE", "SHOW", "PASSWORD", "SLEEP", "FROM", "UNION");
        if (isset($GLOBALS['userlevel']) and $GLOBALS['userlevel'] >= 6) { // Retire UNION de la liste des mots à risque d'injection quand on a des droits suffisants
            $bidon = array_pop($interdits);
        }
        if (!$allow_sql) {
            $ok = true;
            foreach ($interdits as $interdit) {
                if (preg_match("`([[:space:]]|\)|'|\`)" . $interdit . "([[:space:]]|\(|'|\`)`i", $paramMaj)) {
                    // précédé et suivi de blanc, parenthèse, ou apostrophes
                    //if (isin($paramMaj,";")>0)  // rejet si mot interdit et ;
                    $ok = false;
                }
            }
            if (!$ok) {
                msg("Expression rejetee : $param");
                writelog("SQL-INJ : " . EA_sql_real_escape_string($param));
                $param = "";
            }
        }
        return $param;
    } 

    return $default;
}

function navigation($root = "", $level = 1, $type = "", $commune = null, $patronyme = null, $prenom = null)
{
    $signe = "";
    $s2 = "";
    $s4 = "";
    switch ($type) {
        case "N":
            $s2 = "tab_naiss.php";
            $s4 = "acte_naiss.php";
            $signe = "o";
            break;
        case "D":
            $s2 = "tab_deces.php";
            $s4 = "acte_deces.php";
            $signe = "+";
            break;
        case "M":
            $s2 = "tab_mari.php";
            $s4 = "acte_mari.php";
            $signe = "X";
            break;
        case "V":
            $s2 = "tab_bans.php";
            $s4 = "acte_bans.php";
            $signe = "Divers";
            break;
        case "A":
            $signe = "Distribution selon les années";
            break;
        case "R":  // recherche
            $signe = "";
            break;
    }
    if ($signe <> "") {
        $signe = " (" . $signe . ")";
    }
    echo '<div class="navigation">';
    echo 'Navigation';
    if ($level > 1) {
        if ($level > 10) {
            echo ' :: <a href="' . $root . '/index.php">Accueil</a>' . "\n";
            echo ' &gt; <a href="' . $root . '/admin/index.php">Administration</a>' . "\n";
            $path = $root . '/admin';
            $level = $level - 10;
        } else {
            if (SHOW_ALLTYPES == 0) {
                echo ' :: <a href="' . mkurl($root . '/' . "index.php", $type) . '">Communes et paroisses</a>' . "\n";
            } else {
                echo ' :: <a href="' . $root . '/index.php">Communes et paroisses</a>' . "\n";
            }
            $path = $root;
        }
    } else {
        if ($level == 1) {
            echo ' :: Communes et paroisses' . "\n";
        }
    }
    if ($level > 2) {
        echo ' &gt; <a href="' . mkurl($path . '/' . $s2, $commune) . '">' . $commune . $signe . '</a>';
    } else {
        if ($level == 2) {
            echo ' &gt; ' . $commune . $signe . "\n";
        }
    }
    if ($level > 3) {
        echo ' &gt; <a href="' . mkurl($path . '/' . $s2, $commune, $patronyme) . '">' . $patronyme . '</a>';
    } else {
        if ($level == 3) {
            echo ' &gt; ' . $patronyme . "\n";
        }
    }
    if ($level == 4) {
        echo ' &gt; ' . $prenom . "\n";
    }
    echo '</div>' . "\n";
}

function open_page($titre, $root = "", $js = null, $addbody = null, $addhead = null, $index = null, $rss = null)
{
    $carcode = 'UTF-8';
    //$carcode = 'ISO-8859-1';
    header('Content-Type: text/html; charset=' . $carcode);
    if (file_exists(dirname(__FILE__) . '/trt_charset.inc.php')) {
        include(dirname(__FILE__) . '/trt_charset.inc.php');
    }
    global $path, $userlogin, $scriptname, $commune;
    if ($scriptname == "") {
        $scriptname = "index";
    }

    if (!defined("META_DESCRIPTION")) {
        $meta_description = "";
    } else {
        $meta_description = META_DESCRIPTION;
    }
    if (!defined("META_KEYWORDS")) {
        $meta_keywords = "";
    } else {
        $meta_keywords = META_KEYWORDS;
    }

    echo '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">' . "\n";
    echo '<html xmlns="http://www.w3.org/1999/xhtml">' . "\n";
    echo "<head>\n";
    echo '<link rel="shortcut icon" href="' . $root . '/img/favicon.ico" type="image/x-icon" />' . "\n";
    echo '<link rel="stylesheet" href="' . $root . '/tools/css/actes.css" type="text/css" />' . "\n";
    //  if (file_exists($GLOBALS['EA_Appel_dOu'].'_config/actes.css'))
    if (file_exists(dirname(dirname(__FILE__)) . '/_config/actes.css')) {
        echo '<link rel="stylesheet" href="' . $root . '/_config/actes.css" type="text/css" />' . "\n";
    }
    echo '<link rel="stylesheet" href="' . $root . '/tools/css/actes_print.css" type="text/css"  media="print" />' . "\n";

    /**
     * @deprecated, admin will use the 'cookie tool' he want.
     * // Adapté de Cookie Consent plugin by Silktide - http://silktide.com/cookieconsent
     * if (!defined("COOKIE_MESSAGE")) {
    *     $cookie_message = "Acceptez-vous d'utiliser les Cookies ?";
    * } else {
    *     $cookie_message = COOKIE_MESSAGE;
    * }
    * if (!defined("COOKIE_URL_INFO")) {
    *     $cookie_url = "";
    * } else {
    *     $cookie_url = COOKIE_URL_INFO;
    * }
    * $cookie_styles = array(1 => "dark-top", 2 => "light-top", 3 => "dark-bottom", 4 => "light-bottom", 5 => "dark-floating", 6 => "light-floating");
    * if (!defined("COOKIE_STYLE")) {
    *     $cookie_style = $cookie_styles[1];
    * } else {
    *     $cookie_style = $cookie_styles[COOKIE_STYLE];
    * }
    * echo '<script type="text/javascript">
  	* 	window.cookieconsent_options = {
  	* 		"message":"' . $cookie_message . '",
  	* 		"dismiss":"Accepter les cookies",
  	* 		"learnMore":"En savoir plus",
  	* 		"link":"' . $cookie_url . '",
  	* 		"theme":"' . $cookie_style . '"};</script>';
    * echo '<script type="text/javascript" src="' . $root . '/tools/js/cookieconsent.min.js"></script>';
    * // Cookie Consent plugin //
    */
    $t = dirname(dirname(__FILE__)) . '/_config/js_externe_header.inc.php';
    if (file_exists($t)) {
        include($t);
    }

    if ($rss <> "") {
        echo '<link rel="alternate" type="application/rss+xml" title="' . $titre . '" href="' . $root . '/' . $rss . '" />';
    }
    if (!($js == null)) {
        echo '<script language="Javascript 1.2" type="text/javascript">' . "\n";
        echo $js;
        echo '</script>' . "\n";
    }
    echo "<title>$titre</title>\n";
    echo '<meta http-equiv="Content-Type" content="text/html; charset=' . $carcode . '" />' . "\n";
    echo '<meta name="expires" content="never" />' . "\n";
    echo '<meta name="revisit-after" content="15 days" />' . "\n";
    echo '<meta name="robots" content="index, nofollow" />' . "\n";
    echo '<meta name="description" content="' . $meta_description . ' ' . $titre . '" />' . "\n";
    echo '<meta name="keywords" content="' . $meta_keywords . ', ' . $titre . '" />' . "\n";
    echo '<meta name="generator" content="ExpoActes" />' . "\n";
    echo INCLUDE_HEADER . "\n";
    if (!($addhead == null)) {
        echo $addhead . "\n";
    }
    echo "</head>\n";
    echo '<body id="' . $scriptname . '" ' . " $addbody>\n";

    if (getparam(EL) == 'O') {
        echo $ExpoActes_Charset;
    }

    global $TIPmsg;  // message d'alerte pré-blocage IP
    if ($TIPmsg <> "" and (TIP_MODE_ALERT % 2) == 1) {
        echo '<h2><font color="#FF0000">' . $TIPmsg . "</font></h2>\n";
    }
    echo '<div id="top" class="entete">';
    if (EA_MAINTENANCE == 1) {
        echo '<font color="#FF0000"><b>!! MAINTENANCE !!</b></font>';
    }

    $bandeau = "_config/bandeau.htm";
    if ($root != $path) {
        $bandeau = "../" . $bandeau;
    }
    include($bandeau);
    echo "</div>\n";
}

function close_page($complet = 0, $root = null)
{
    global $TIPmsg;  // message d'alerte pré-blocage IP
    echo '<div id="pied_page2" class="pied_page2">';
    echo '<div id="totop2" class="totop2"><p class="totop2"><strong><a href="#top">Top</a></strong> &nbsp; </p></div>';
    echo '<div id="texte_pied2" class="texte_pied2"><p class="texte_pied2">' . PIED_PAGE . '</p></div>';
    echo '<div id="copyright2" class="copyright2"><p class="copyright2"><em><a href="http://expocartes.monrezo.be/">ExpoActes</a></em> version ' . EA_VERSION . $GLOBALS['EAg_BETA'] . ' (&copy;<em> 2005-' . date("Y") . ', ADSoft)</em></p></div>';
    echo '</div>';

    if (file_exists(__DIR__ . '/../_config/js_externe_footer.inc.php')) {
        include(__DIR__ . '/../_config/js_externe_footer.inc.php');
    }

    if ($TIPmsg <> "" && TIP_MODE_ALERT >= 2) {
        echo "<script language=javascript>";
        echo 'alert("' . $TIPmsg . '")';
        echo '</script>';
    }
    echo "</body>\n";
    echo "</html>\n";
}


/**
 * @deprecated
 * $script = file_get_contents(__DIR__ . '/tools/js/sha1.js');
 * <!-- @deprecated <script type="text/javascript">
 *   //<![CDATA[
 *   function pwProtect() {
 *       form = document.forms["eaform"];
 *       if (form.oldpassw.value == "") {
 *           alert("Erreur : L'ancien mot de passe est vide !");
 *           return false;
 *       }
 *       if (form.passw.value == "") {
 *           alert("Erreur : Le nouveau mot de passe est vide !");
 *           return false;
 *       }
 *       if (form.passw.value.length < 6) {
 *           alert("Erreur : Le nouveau mot de passe est trop court (min 6 caractères) !");
 *           return false;
 *       }
 *       if (!(form.passw.value == form.passwverif.value)) {
 *           alert("Erreur : Les nouveaux mots de passes ne sont pas identiques !");
 *           return false;
 *       }
 *       if (sha1_vm_test()) { // si le codage marche alors on l'utilise
 *           form.codedpass.value = hex_sha1(form.passw.value);
 *           form.codedoldpass.value = hex_sha1(form.oldpassw.value);
 *           form.passw.value = "";
 *           form.oldpassw.value = "";
 *           form.passwverif.value = "";
 *           form.iscoded.value = "Y";
 *       }
 *       return true;
 *   }
 *
 *   function seetext(x) {
 *       x.type = 'text';
 *   }
 *
 *   function seeasterisk(x) {
 *       x.type = 'password';
 *   }
 *   //]]>
 * </script> -->
 */

 function edit_text($name, $size, $value, $caption)
{
    echo ' <tr class="row1">' . "\n";
    echo "  <td align=right>" . $caption . " : </td>\n";
    echo '  <td>';
    if ($size <= 70) {
        $value = str_replace('"', '&quot;', $value);

        echo '<input type="text" name="' . $name . '" size=' . $size . '" maxlength=' . $size . ' value="' . $value . '">';
    } else {
        echo '<textarea name="' . $name . '" cols=70 rows=' . (min(4, $size / 70)) . '>' . $value . '</textarea>';
    }
    echo '  </td>';
    echo " </tr>\n";
}

/**
 * @deprecated Expoactes system
 */
function check_new_version($key, $urlsite, $type_site = '')
{
    //$MODE_check = '';
    $MODE_check = 'JSON';

    // Par défaut :
    $lavaleur = EA_VERSION . '|l';
    if (!isset($_COOKIE[$key])) {
        $h = $_SERVER['HTTP_HOST'];
        $r = $_SERVER['REQUEST_URI'];

        if ($MODE_check === 'JSON') {
            if (!isset($_REQUEST['EA_VERSION_LAST'])) {
                $serveur_addrPhpSQL = '&addr=' . $_SERVER['SERVER_ADDR'] . '&PhpSQL=PHP-' . phpversion() . '_SQL-' . EA_sql_get_server_info() . '&V=' . EA_VERSION;
                $X = '<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.5.0/jquery.min.js"></script>
<script language="javascript">
    $.extend( {
        redirectPost: function (location, args) {
            var form = $("<form>", { action: location, method: "post" });
            $.each(args,
                function (key, val) {
                    $(form).append(
                        $("<input>", { type: "hidden", name: key, value: val })
                    );
                });
            $(form).appendTo("body").submit();
        }
    });
    window.onload = function(e) {
        var toLoad = "' . SITE_INVENTAIRE . 'versions.php?type=JSON&req=' . $h . $r . '&inv=' . $type_site . $serveur_addrPhpSQL . '";
        var retourne = "";
        $.ajax({ url: toLoad,
            dataType: "json",
            timeout: 3000, // sets timeout to 3 seconds (ok 30 génère  erreur)
            success: function(REPONSE) {
				retourner(JSON.stringify(REPONSE));
			},
            error: function (jqXHR, textStatus, errorThrown) {
				retourner("erreur");
			},
        });
        function retourner(retourne) {
    		var myArray = {"EA_VERSION_LAST": retourne };
    	    $.redirectPost("", myArray);
        }
    }
</script>
';
                echo $X;
                return $lavaleur;
            } else {
                $obj = json_decode($_REQUEST['EA_VERSION_LAST'], true);
                if (!isset($obj['EXPOACTES'])) {
                    $newvers = EA_VERSION;
                    $status_inv = 'l';
                    $lavaleur = EA_VERSION . '|l';
                } else {
                    $lavaleur = $obj['EXPOACTES'];
                    $t = explode('|', $lavaleur . '|l');
                    $newvers = $t[0];
                    $status_inv = $t[1];
                }
            }
        } else {
            $lines = @file($urlsite . 'versions.php?req=' . $h . $r . '&inv=' . $type_site);
            if ($lines) {
                $lavaleur = "";
                foreach ($lines as $line) {
                    $laligne = explode(":", $line);
                    if ($laligne[0] == $key) {
                        $lavaleur = $laligne[1];
                    }
                }
            }
        }
        // setcookie($key, $lavaleur);  // session uniquement
    }
    return $lavaleur;
}


/**
 * @deprecated Expoactes system
 */
function check_version($currentversion, $requiredversion)
// retourne VRAI si currentversion est superieur ou égal à requiredversion
{
    list($majorC, $minorC, $editC) = explode(".", $currentversion);
    list($majorR, $minorR, $editR) = explode(".", $requiredversion);

    $majorC = intval($majorC);
    $majorR = intval($majorR);
    $minorC = intval($minorC);
    $minorR = intval($minorR);
    $editC  = intval($editC);
    $editR  = intval($editR);

    if ($majorC > $majorR) {
        return true;
    }
    if ($majorC < $majorR) {
        return false;
    }

    if ($minorC > $minorR) {
        return true;
    }
    if ($minorC < $minorR) {
        return false;
    }

    if ($editC  >= $editR) {
        return true;
    }
    if ($editC  >= $editR) {
        return true;
    }

    return false;
}


function dequote_magic_quotes() // pour retirer les magic quotes s il y en a !! sur REQUEST et $_COOKIE
{   // deprecated from PHP 7.4 and useless since 5.4)
    if (version_compare(phpversion(), '5.4.0', '<')) {
        if (get_magic_quotes_gpc()) {
            if (is_array($_REQUEST)) {
                foreach ($_REQUEST as $k => $v) {
                    if (is_string($v)) {
                        $_REQUEST[$k] = stripslashes($v);
                    }
                }
            }
            if (is_array($_COOKIE)) {
                foreach ($_COOKIE as $k => $v) {
                    if (is_string($v)) {
                        $_COOKIE[$k]  = stripslashes($v);
                    }
                }
            }
        }
    }
}


function menu_datas($current)
{
    global $userlevel;
    echo '<p align="center"><strong>Administration des données : </strong>';
    showmenu('Statistiques', 'maj_sums.php', 'S', $current, false);
    if ($userlevel > 7) {
        showmenu('Localités', 'listgeolocs.php', 'L', $current);
    }
    showmenu('Ajout d\'un acte', 'ajout_1acte.php', 'A', $current);
    if ($userlevel > 7) {
        showmenu('Corrections groupées', 'corr_grp_acte.php', 'G', $current);
        showmenu('Backup', 'exporte.php?Destin=B', 'B', $current);
        showmenu('Restauration', 'charge.php?Origine=B', 'R', $current);
    }
    echo '</p>';
}

function con_une_db($ladbaddr, $ladbuser, $ladbpass, $ladbname, $show = false, $new_link = false) // fonction de connexion à une DB
{
    global $dbok;

    if (file_exists('tools/function.php')) {
        $EA_Appel_dOu = '';
        $EA_Script_Courant = basename($_SERVER['PHP_SELF']);
    } else {
        $EA_Appel_dOu = '../';
        $EA_Script_Courant = basename(dirname($_SERVER['PHP_SELF'])) . '/' . basename($_SERVER['PHP_SELF']); // Ne pas utiliser DIRECTORY_SEPARATOR
    }

    if ($ladbaddr == '@@serveur_BD@@') {
        $dblink = false;
    } elseif (function_exists('EA_sql_connect')) {
        $dblink = @EA_sql_connect("$ladbaddr", "$ladbuser", "$ladbpass", $new_link);
    } else {
        $dblink = @mysqli_connect("$ladbaddr", "$ladbuser", "$ladbpass", "$ladbname");
    }
    if ($dblink) {
        if ($show) {
            echo '<p>Connexion au serveur MySQL :<b> OK</b></p>';
        }
        $dbok = EA_sql_select_db("$ladbname", $dblink);
        if ($dbok) {
            EA_sql_query('SET NAMES utf8', $dblink);  // oblige MySQL à répondre en UTF-8  (ISO-8859-1 par défaut)
            if ($show) {
                echo '<p>Connexion &agrave; la base de donn&eacute;es : <b> OK</b></p>';
            }
        } else {
            if (in_array($EA_Script_Courant, array('admin/index.php', 'install/install.php', 'install/update.php'))) {
                echo '<a href="' . $EA_Appel_dOu . 'install/configuration.php">Configurer la base de donn&eacute;es</a>';
            } else {
                msg("012 : La base sp&eacute;cifi&eacute;e n'est pas accessible sur le serveur MySQL : " . EA_sql_error());
            }
            exit(0);
        }
        return $dblink;
    } else {
        if (in_array($EA_Script_Courant, array('admin/index.php', 'install/install.php', 'install/update.php', 'index.php'))) {
            echo '<a href="' . $EA_Appel_dOu . 'install/configuration.php">Configurer la base de donn&eacute;es</a>';
        } else {
            msg("011: Impossible d'ouvrir la connexion au serveur MySQL avec l'utilisateur pr&eacute;sent&eacute; : " . EA_sql_error());
        }
        exit(0);
    }
}

function con_db($show = false) // fonction de connexion des DB
{
    global $dbaddr, $dbuser, $dbpass, $dbname, $a_db, $dbok;
    global $udbaddr, $udbuser, $udbpass, $udbname, $u_db;

    if (isset($udbaddr, $udbuser, $udbpass, $udbname)) {
        if ($show) {
            echo '<p><b>Base des utilisateurs :</b></p>';
        }
        $u_db = con_une_db($udbaddr, $udbuser, $udbpass, $udbname, $show);
        if ($show) {
            echo '<p><b>Base des actes :</b></p>';
        }
        $a_db = con_une_db($dbaddr, $dbuser, $dbpass, $dbname, $show, true);
    } else {
        if ($show) {
            echo '<p><b>Base des actes et des utilisateurs :</b></p>';
        }
        $u_db = $a_db = con_une_db($dbaddr, $dbuser, $dbpass, $dbname, $show);
    }
    return $a_db;
}